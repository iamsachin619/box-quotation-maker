{"version":3,"sources":["App.js","serviceWorkerRegistration.js","index.js"],"names":["data","boxSheet","label","value","ply","paperGSM","initFormValue","length","height","width","top","flute","bottom","topCost","fluteCost","bottomCost","ConversionRate","margin1","margin2","FlutePercent","PrintingCost","wastage","App","React","useState","formValue","setFormValue","weight","setWeight","sheetCutting","setSheetCutting","fluteGsmT","setFluteGsmT","bottomGsmT","setBottomGsmT","topWT","setTopWT","fluteWT","setFluteWT","bottomWT","setBottomWT","cost","setCost","useEffect","calculateGsmT","calculateSheetCutting","calculateWeight","calculateCost","console","log","topPaperPrice","Number","flutePaperPrice","bottomPaperPrice","topPrintingPrice","bottomPrintingPrice","flutePrintingPrice","topConversion","bottomConversion","fluteConversion","toFixed","decal","topWeight","fluteWeight","bottomWeight","topWeightWithWaste","bottomWeightWithWaste","fluteWeightWithWaste","className","Form","fluid","onChange","Panel","header","shaded","bordered","Group","controlId","ControlLabel","Control","name","accepter","InputPicker","InputNumber","postfix","prefix","collapsible","appearance","readOnly","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","rootElement","document","getElementById","createRoot","render","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.cd65686d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Panel, Form, InputPicker, InputNumber } from \"rsuite\";\r\nimport \"rsuite/dist/rsuite.min.css\";\r\nimport \"./styles.css\";\r\n\r\nconst data = {\r\n  boxSheet: [\r\n    { label: \"Two Sheet One Box\", value: \"Two Sheet One Box\" },\r\n    { label: \"One Sheet One Box\", value: \"One Sheet One Box\" }\r\n  ],\r\n  ply: [\r\n    { label: 3, value: 3 },\r\n    { label: 5, value: 5 },\r\n    { label: 7, value: 7 }\r\n  ],\r\n  paperGSM: [\r\n    { label: \"100\", value: 100 },\r\n    { label: \"120\", value: 120 },\r\n    { label: \"140\", value: 140 },\r\n    { label: \"150\", value: 150 },\r\n    { label: \"160\", value: 160 },\r\n    { label: \"180\", value: 180 }\r\n  ]\r\n};\r\nconst initFormValue = {\r\n  boxSheet: \"One Sheet One Box\",\r\n  ply: 3,\r\n  length: \"\",\r\n  height: \"\",\r\n  width: \"\",\r\n  top: \"\",\r\n  flute: \"\",\r\n  bottom: \"\",\r\n  topCost: \"\",\r\n  fluteCost: \"\",\r\n  bottomCost: \"\",\r\n  ConversionRate: \"10\",\r\n  margin1: \"50\",\r\n  margin2: \"15\",\r\n  FlutePercent: \"40\",\r\n  PrintingCost: \"1\",\r\n  wastage: \"3\"\r\n};\r\nexport default function App() {\r\n  const [formValue, setFormValue] = React.useState(initFormValue);\r\n  const [weight, setWeight] = React.useState(0);\r\n  const [sheetCutting, setSheetCutting] = React.useState(0);\r\n  const [fluteGsmT, setFluteGsmT] = React.useState(0);\r\n  const [bottomGsmT, setBottomGsmT] = React.useState(0);\r\n  const [topWT, setTopWT] = React.useState(0);\r\n  const [fluteWT, setFluteWT] = React.useState(0);\r\n  const [bottomWT, setBottomWT] = React.useState(0);\r\n  const [cost, setCost] = React.useState(0);\r\n  React.useEffect(() => {\r\n    calculateGsmT();\r\n    calculateSheetCutting();\r\n    calculateWeight();\r\n    calculateCost();\r\n    console.log(\"here\");\r\n  }, [formValue, fluteGsmT, bottomGsmT, topWT, fluteWT, bottomWT]);\r\n\r\n  const calculateCost = () => {\r\n    let topPaperPrice = (Number(formValue.topCost) * topWT) / 1000;\r\n    let flutePaperPrice = (Number(formValue.fluteCost) * fluteWT) / 1000;\r\n    let bottomPaperPrice = (Number(formValue.bottomCost) * bottomWT) / 1000;\r\n\r\n    let topPrintingPrice = (topWT * Number(formValue.PrintingCost)) / 1000;\r\n    let bottomPrintingPrice =\r\n      (bottomWT * Number(formValue.PrintingCost)) / 1000;\r\n    let flutePrintingPrice = (fluteWT * Number(formValue.PrintingCost)) / 1000;\r\n    console.log(\"\", topPrintingPrice, bottomPrintingPrice, flutePrintingPrice);\r\n    let topConversion = (topWT * Number(formValue.ConversionRate)) / 1000;\r\n    let bottomConversion = (bottomWT * Number(formValue.ConversionRate)) / 1000;\r\n    let fluteConversion = (fluteWT * Number(formValue.ConversionRate)) / 1000;\r\n\r\n    let sum =\r\n      topConversion +\r\n      topPaperPrice +\r\n      topPrintingPrice +\r\n      fluteConversion +\r\n      flutePaperPrice +\r\n      flutePrintingPrice +\r\n      bottomPaperPrice +\r\n      bottomPrintingPrice +\r\n      bottomConversion;\r\n\r\n    setCost(sum.toFixed(2));\r\n  };\r\n  const calculateWeight = () => {\r\n    // let topGsmTotal = Number(formValue.top);\r\n    // let fluteGsmTotal =\r\n    //   Number(formValue.flute) * ((Number(formValue.ply) - 1) / 2);\r\n    // let bottomGsmTotal =\r\n    //   Number(formValue.bottom) * ((Number(formValue.ply) - 1) / 2);\r\n    //console.log(topGsmTotal, fluteGsmTotal, bottomGsmTotal);\r\n\r\n    //decal\r\n    let decal =\r\n      Number(formValue.width) +\r\n      Number(formValue.height) +\r\n      Number(formValue.margin2);\r\n\r\n    let topWeight = (Number(formValue.top) * sheetCutting * decal) / 1000000;\r\n    let fluteWeight = (fluteGsmT * sheetCutting * decal) / 1000000;\r\n    // console.log(fluteWeight, decal, fluteGsmT);\r\n    let bottomWeight = (bottomGsmT * sheetCutting * decal) / 1000000;\r\n\r\n    let topWeightWithWaste =\r\n      topWeight + (topWeight * Number(formValue.wastage)) / 100;\r\n    let bottomWeightWithWaste =\r\n      bottomWeight + bottomWeight * (Number(formValue.wastage) / 100);\r\n    let fluteWeightWithWaste =\r\n      fluteWeight + (fluteWeight * Number(formValue.wastage)) / 100;\r\n    console.log(fluteWeightWithWaste);\r\n    setBottomWT(bottomWeightWithWaste);\r\n    setFluteWT(fluteWeightWithWaste);\r\n    setTopWT(topWeightWithWaste);\r\n    setWeight(\r\n      (\r\n        bottomWeightWithWaste +\r\n        fluteWeightWithWaste +\r\n        topWeightWithWaste\r\n      ).toFixed(2)\r\n    );\r\n  };\r\n\r\n  const calculateSheetCutting = () => {\r\n    if (formValue.boxSheet === \"One Sheet One Box\") {\r\n      let sheetCutting =\r\n        2 * (Number(formValue.length) + Number(formValue.width)) +\r\n        Number(formValue.margin1);\r\n      setSheetCutting(sheetCutting);\r\n    } else {\r\n      let sheetCutting =\r\n        Number(formValue.length) +\r\n        Number(formValue.width) +\r\n        Number(formValue.margin1);\r\n      setSheetCutting(sheetCutting);\r\n    }\r\n  };\r\n  const calculateGsmT = () => {\r\n    setBottomGsmT(Number(formValue.bottom) * ((Number(formValue.ply) - 1) / 2));\r\n    setFluteGsmT(\r\n      Number(formValue.flute) *\r\n        ((Number(formValue.ply) - 1) / 2) *\r\n        (1 + Number(formValue.FlutePercent) / 100)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h2>Box Quote Maker</h2>\r\n      <div className=\"mainContainer\">\r\n        <Form\r\n          fluid\r\n          formValue={formValue}\r\n          onChange={(formValue) => {\r\n            setFormValue(formValue);\r\n          }}\r\n        >\r\n          <Panel header=\"Main Data\" shaded bordered>\r\n            <Form.Group controlId=\"boxSheet\">\r\n              <Form.ControlLabel>Box Sheet:</Form.ControlLabel>\r\n              <Form.Control\r\n                name=\"boxSheet\"\r\n                accepter={InputPicker}\r\n                data={data.boxSheet}\r\n                // value={initFormValue.boxSheet}\r\n              />\r\n              {/* <Form.HelpText tooltip>\r\n                This is a tooltip description.\r\n              </Form.HelpText> */}\r\n            </Form.Group>\r\n            <Form.Group controlId=\"ply\">\r\n              <Form.ControlLabel>Ply:</Form.ControlLabel>\r\n              <Form.Control\r\n                name=\"ply\"\r\n                accepter={InputPicker}\r\n                data={data.ply}\r\n                // value={initFormValue.boxSheet}\r\n              />\r\n            </Form.Group>\r\n          </Panel>\r\n          <br />\r\n          <Panel header=\"Dimensions\" shaded bordered>\r\n            <Form.Group controlId=\"length\">\r\n              <Form.ControlLabel>Length:</Form.ControlLabel>\r\n              <Form.Control\r\n                name=\"length\"\r\n                accepter={InputNumber}\r\n                postfix=\"mm\"\r\n                // value={initFormValue.boxSheet}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"width\">\r\n              <Form.ControlLabel>Width:</Form.ControlLabel>\r\n              <Form.Control\r\n                name=\"width\"\r\n                accepter={InputNumber}\r\n                postfix=\"mm\"\r\n                // value={initFormValue.boxSheet}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"height\">\r\n              <Form.ControlLabel>Height:</Form.ControlLabel>\r\n              <Form.Control\r\n                name=\"height\"\r\n                accepter={InputNumber}\r\n                postfix=\"mm\"\r\n                // value={initFormValue.boxSheet}\r\n              />\r\n            </Form.Group>\r\n\r\n            {/* {formValue.boxSheet}\r\n            {formValue.ply} */}\r\n          </Panel>\r\n          <br />\r\n          <Panel header=\"GSM\" bordered shaded>\r\n            <Form.Group controlId=\"top\">\r\n              <Form.ControlLabel>Top:</Form.ControlLabel>\r\n              <Form.Control\r\n                name=\"top\"\r\n                accepter={InputPicker}\r\n                data={data.paperGSM}\r\n                // value={initFormValue.boxSheet}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"flute\">\r\n              <Form.ControlLabel>Flute:</Form.ControlLabel>\r\n              <Form.Control\r\n                name=\"flute\"\r\n                accepter={InputPicker}\r\n                data={data.paperGSM}\r\n                // value={initFormValue.boxSheet}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"bottom\">\r\n              <Form.ControlLabel>Bottom:</Form.ControlLabel>\r\n              <Form.Control\r\n                name=\"bottom\"\r\n                accepter={InputPicker}\r\n                data={data.paperGSM}\r\n                // value={initFormValue.boxSheet}\r\n              />\r\n            </Form.Group>\r\n          </Panel>\r\n          <br />\r\n          <Panel header=\"Paper Costing\" bordered shaded>\r\n            <Form.Group controlId=\"topCost\">\r\n              <Form.ControlLabel>Top paper cost per KG:</Form.ControlLabel>\r\n              <Form.Control\r\n                name=\"topCost\"\r\n                accepter={InputNumber}\r\n                prefix=\"Rs.\"\r\n                // value={initFormValue.boxSheet}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"fluteCost\">\r\n              <Form.ControlLabel>Flute paper cost per KG:</Form.ControlLabel>\r\n              <Form.Control\r\n                name=\"fluteCost\"\r\n                accepter={InputNumber}\r\n                prefix=\"Rs.\"\r\n                // value={initFormValue.boxSheet}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"bottomCost\">\r\n              <Form.ControlLabel>Bottom paper cost per KG:</Form.ControlLabel>\r\n              <Form.Control\r\n                name=\"bottomCost\"\r\n                accepter={InputNumber}\r\n                prefix=\"Rs.\"\r\n                // value={initFormValue.boxSheet}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"ConversionRate\">\r\n              <Form.ControlLabel>Conversion Cost per Kg:</Form.ControlLabel>\r\n              <Form.Control\r\n                name=\"ConversionRate\"\r\n                accepter={InputNumber}\r\n                prefix=\"Rs.\"\r\n                // value={initFormValue.boxSheet}\r\n              />\r\n            </Form.Group>\r\n          </Panel>\r\n          <br />\r\n          <Panel header=\"More Info\" bordered collapsible shaded>\r\n            <Form.Group controlId=\"FlutePercent\">\r\n              <Form.ControlLabel>Flute %:</Form.ControlLabel>\r\n              <Form.Control\r\n                name=\"FlutePercent\"\r\n                accepter={InputNumber}\r\n                postfix=\"%\"\r\n                // value={initFormValue.boxSheet}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"PrintingCost\">\r\n              <Form.ControlLabel>Printing Cost per KG:</Form.ControlLabel>\r\n              <Form.Control\r\n                name=\"PrintingCost\"\r\n                accepter={InputNumber}\r\n                prefix=\"Rs.\"\r\n\r\n                // value={initFormValue.boxSheet}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"wastage\">\r\n              <Form.ControlLabel>Wastage %:</Form.ControlLabel>\r\n              <Form.Control name=\"wastage\" accepter={InputNumber} postfix=\"%\" />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"margin1\">\r\n              <Form.ControlLabel>Margin SheetCutting:</Form.ControlLabel>\r\n              <Form.Control\r\n                name=\"margin1\"\r\n                accepter={InputNumber}\r\n                postfix=\"mm\"\r\n                // value={initFormValue.boxSheet}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"margin2\">\r\n              <Form.ControlLabel>Margin Decal:</Form.ControlLabel>\r\n              <Form.Control\r\n                name=\"margin2\"\r\n                accepter={InputNumber}\r\n                postfix=\"mm\"\r\n\r\n                // value={initFormValue.boxSheet}\r\n              />\r\n            </Form.Group>\r\n          </Panel>\r\n          <br />\r\n          <Panel header=\"Output\" bordered shaded className= 'Output'>\r\n            <Form.Group controlId=\"weight\" appearance>\r\n              <Form.ControlLabel>Weight of Box:</Form.ControlLabel>\r\n              <Form.Control\r\n                name=\"weight\"\r\n                accepter={InputNumber}\r\n                readOnly={true}\r\n                value={(weight / 1000).toFixed(3)}\r\n                postfix=\"KG\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"weight\">\r\n              <Form.ControlLabel>Cost per Psc:</Form.ControlLabel>\r\n              <Form.Control\r\n                name=\"weight\"\r\n                accepter={InputNumber}\r\n                readOnly={true}\r\n                value={cost}\r\n                prefix=\"Rs.\"\r\n              />\r\n            </Form.Group>\r\n          </Panel>\r\n          <br />\r\n          <Panel header=\"More Output\" bordered shaded collapsible>\r\n            <Form.Group controlId=\"weight\">\r\n              <Form.ControlLabel>Rate :</Form.ControlLabel>\r\n              <Form.Control\r\n                name=\"weight\"\r\n                accepter={InputNumber}\r\n                readOnly={true}\r\n                value={(cost / (weight / 1000)).toFixed(2)}\r\n                prefix=\"Rs.\"\r\n                postfix=\"per KG\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"weight\">\r\n              <Form.ControlLabel>Sheet Cutting in mm:</Form.ControlLabel>\r\n              <Form.Control\r\n                name=\"sheetCutting\"\r\n                accepter={InputNumber}\r\n                readOnly={true}\r\n                value={sheetCutting}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"weight\">\r\n              <Form.ControlLabel>Decal size in Inch :</Form.ControlLabel>\r\n              <Form.Control\r\n                name=\"sheetCutting\"\r\n                accepter={InputNumber}\r\n                readOnly={true}\r\n                value={\r\n                  (Number(formValue.width) +\r\n                    Number(formValue.height) +\r\n                    Number(formValue.margin2)) /\r\n                  25.6\r\n                }\r\n              />\r\n            </Form.Group>\r\n          </Panel>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://cra.link/PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then((registration) => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://cra.link/PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then((response) => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log('No internet connection found. App is running in offline mode.');\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then((registration) => {\r\n          registration.unregister();\r\n        })\r\n        .catch((error) => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","import { StrictMode } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\n\r\nimport App from \"./App\";\r\n\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nroot.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>\r\n);\r\n\r\n\r\nserviceWorkerRegistration.register();"],"sourceRoot":""}